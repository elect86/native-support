/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import org.gradle.api.Project
import org.gradle.api.Plugin
import org.gradle.api.attributes.Attribute
import org.gradle.api.attributes.Usage

/**
 * A simple 'hello world' plugin.
 */
class NativeSupportPlugin : Plugin<Project> {
    override fun apply(project: Project) {
        // Register a task
        //        project.tasks.register("greeting") { task ->
        //            task.doLast {
        //                println("Hello from plugin 'org.example.greeting'")
        //            }
        //        }
        project.configurations.configureEach {
                println("[$this] $attributes")
            if (name.endsWith("CompileClasspath") || name.endsWith("RuntimeClasspath"))
//                attributes.getAttribute(Usage.USAGE_ATTRIBUTE)?.name?.let { usage ->
//                    if (usage == Usage.JAVA_API || usage == Usage.JAVA_RUNTIME)
                        attributes {
                            // select a platform, will fail to compose a runtime classpath if none is selected
                            attribute(Attribute.of(OS::class.java), OS.linux) // or MACOS or LINUX
                            attribute(Attribute.of(Arch::class.java), Arch.x86_64)   // or x86-64 or arm32 or arm64
                        }
//                }
        }
    }
}
